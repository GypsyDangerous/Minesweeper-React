{"version":3,"sources":["contexts/gameContext.js","components/Tile.js","components/GameBoard.js","components/Header.js","components/Footer.js","firebase.js","components/Backdrop.js","components/Modal.js","App.js","index.js"],"names":["gameContext","createContext","flagCount","setFlagCount","gameIsOver","setGameIsOver","Index","i","j","n","twoDInex","cols","Math","floor","Tile","props","useState","tile","setTile","board","setBoard","hover","setHover","game","useContext","useEffect","t","boardSize","boardDimension","extraClick","reduce","acc","cur","isFlag","setWinner","isClicked","length","mineCount","hasBomb","onContextMenu","e","copy","index","onClick","reveal","force","current","forEach","x","y","k","neighbors","neighbor","onMouseOver","buttons","onMouseUp","onMouseLeave","className","style","width","height","icon","faBomb","color","faFlag","GameBoard","size","styleObj","gridTemplateColumns","dimension","map","key","Header","useStopwatch","autoStart","seconds","minutes","pause","start","reset","emoji","setEmoji","mouseDown","setMouseDown","winner","setTime","text","Footer","onDifficultyChange","target","value","onChange","difficulty","name","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","children","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","difficultyMap","easy","mines","medium","hard","extreme","segment","arr","categories","result","cat","push","filter","item","App","setDimension","Array","fill","setDifficulty","scores","setScores","setShow","userName","setUserName","getData","a","db","firestore","collection","get","data","docs","doc","onSnapshot","snapshot","console","log","boardArray","random","keys","sort","slice","setMineCount","addScore","username","time","add","onMouseDown","type","htmlFor","Object","render","setGameisOver","Provider"],"mappings":"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","file":"static/js/main.9e2247aa.chunk.js","sourcesContent":["import React, {createContext, useState} from \"react\"\r\n\r\nexport const gameContext = createContext({\r\n    flagCount: 0,\r\n    setFlagCount: () => {},\r\n    gameIsOver: false,\r\n    setGameIsOver: () => {}\r\n})\r\n\r\nexport const GameContextProvider = props => {\r\n    const [flagCount, setFlagCount] = useState(0)\r\n    const [gameIsOver, setGameisOver] = useState(false)\r\n    const [winner, setWinner] = useState(false)\r\n    const [mineCount, setMineCount] = useState(50)\r\n    const [time, setTime] = useState()\r\n\r\n    return (\r\n        <gameContext.Provider\r\n            value={{\r\n                flagCount: flagCount,\r\n                setFlagCount: setFlagCount,\r\n                gameIsOver: gameIsOver,\r\n                setGameIsOver: setGameisOver,\r\n                winner: winner,\r\n                setWinner: setWinner,\r\n                mineCount: mineCount,\r\n                setMineCount: setMineCount,\r\n                time: time,\r\n                setTime: setTime\r\n            }}\r\n        >\r\n            {props.children}\r\n        </gameContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faBomb, faFlag} from \"@fortawesome/free-solid-svg-icons\"\r\nimport { gameContext } from '../contexts/gameContext';\r\n\r\nconst Index = (i, j, n = 3) => {\r\n    if(i < 0 || j < 0 || i >= n || j >= n)return\r\n    return n * i + j\r\n}\r\n\r\nconst twoDInex = (n, cols) => {\r\n    const i = n%cols\r\n    const j = Math.floor(n/cols)\r\n    return [j, i]\r\n} \r\n\r\nconst Tile = props => {\r\n\r\n    const [tile, setTile] = useState({})\r\n    const [board, setBoard] = props.board\r\n    const [hover, setHover] = useState(false)\r\n    const game = useContext(gameContext)\r\n\r\n    useEffect(() => {\r\n        setTile(t => props.tile || t)\r\n    }, [props])\r\n\r\n    const {boardSize, boardDimension} = props\r\n\r\n    const reveal = (index, force=false) => {\r\n        const copy = [...board]\r\n        const current = copy[index]\r\n        if(!current.isClicked && (!current.isFlag || force)){\r\n            copy[index].isClicked = true\r\n            if(copy[index].hasBomb){\r\n                game.setGameIsOver(true)\r\n                copy.forEach((t, i) => reveal(i, true))\r\n            }\r\n            const [x, y] = twoDInex(index, boardDimension)\r\n            \r\n            if (!copy[index].hasBomb) {\r\n                for (let i = -1; i < 2; i++) {\r\n                    for (let j = -1; j < 2; j++) {\r\n                        const k = Index(i + x, j + y, boardDimension)\r\n                        if (copy[k]) {\r\n                            copy[index].neighbors += copy[k].hasBomb ? 1 : 0\r\n                        }\r\n                    }\r\n                }\r\n                if(copy[index].neighbors <= 0){\r\n                    for (let i = -1; i < 2; i++) {\r\n                        for (let j = -1; j < 2; j++) {\r\n                            const k = Index(i + x, j + y, boardDimension)\r\n                            const neighbor = copy[k]\r\n                            if(neighbor && !neighbor.hasBomb && k !== index){\r\n                                reveal(k)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            setBoard(copy)\r\n        }\r\n    }\r\n\r\n    const extraClick = () => {\r\n        game.setFlagCount(board.reduce((acc, cur, i) => cur.isFlag ? acc + 1 : acc, 0))\r\n        game.setWinner(board.reduce((acc, cur) => cur.isClicked ? acc+1: acc, 0) === board.length-game.mineCount && board.reduce((acc, cur) => cur.isFlag && cur.hasBomb ? acc + 1 : acc, 0) === board.reduce((acc, cur) => cur.hasBomb ? acc + 1 : acc, 0))\r\n    }\r\n\r\n    const clickHandler = e => {\r\n        reveal(props.index)\r\n        extraClick()\r\n    }\r\n\r\n    const contextHandler = e => {\r\n        const copy = [...board]\r\n        if (!copy[props.index].isClicked && (game.mineCount-game.flagCount > 0 || copy[props.index].isFlag)) {\r\n            copy[props.index].isFlag = !copy[props.index].isFlag\r\n            setBoard(copy)\r\n        }\r\n        extraClick()\r\n    }\r\n\r\n    const handleMouseOver = e => {\r\n        if(e.buttons === 1 || e.buttons === 2){\r\n            setHover(true)\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <button \r\n            onContextMenu={contextHandler} \r\n            onClick={clickHandler} \r\n            onMouseOver={handleMouseOver}\r\n            onMouseUp={() => setHover(false)} \r\n            onMouseLeave={() => setHover(false)} \r\n            className={`tile ${tile.isClicked && \"inset\"} ${!tile.isClicked && hover && \"no-bomb inset\"} ${tile.isClicked && !tile.hasBomb && \"no-bomb\"}`} \r\n            style={{width: boardSize/boardDimension, height: boardSize/boardDimension}}\r\n        >\r\n            {tile.isClicked && tile.hasBomb && <FontAwesomeIcon icon={faBomb}/>}\r\n            {tile.isFlag && <FontAwesomeIcon style={{color: \"red\"}} icon={faFlag}/>}\r\n            {tile.isClicked && !tile.hasBomb && tile.neighbors > 0 ? tile.neighbors : \"\"}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Tile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Tile from './Tile';\r\n\r\nimport \"./GameBoard.css\"\r\n\r\nconst GameBoard = props => {\r\n\r\n    const [board, setBoard] = useState([])\r\n    const [size, setSize] = useState(500)\r\n\r\n    useEffect(() => {\r\n        setBoard(props.board)\r\n    }, [props])\r\n\r\n    const styleObj = {\r\n        gridTemplateColumns: `repeat(${props.dimension}, 1fr)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-board\" style={styleObj}>\r\n            {board.map((t, i) => (\r\n                <Tile key={i} index={i} tile={t} board={[board, setBoard]} boardDimension={props.dimension} boardSize={size} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Emoji, { Twemoji, Emojione} from \"react-emoji-render\"\r\nimport { gameContext } from '../contexts/gameContext';\r\nimport { useStopwatch } from \"react-timer-hook\"\r\n\r\nconst winnerFace = \"😎\"\r\n\r\nconst Header = props => {\r\n\r\n    const {\r\n        seconds,\r\n        minutes,\r\n        start,\r\n        pause,\r\n        reset,\r\n    } = useStopwatch({ autoStart: true });\r\n\r\n    const [emoji, setEmoji] = useState(\":)\")\r\n    const [mouseDown, setMouseDown] = useState(false)\r\n\r\n    const game = useContext(gameContext)\r\n\r\n    useEffect(() => {\r\n        setMouseDown(props.mouseDown)\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        setEmoji(game.winner ? winnerFace : game.gameIsOver ? \"☠️\" : mouseDown ? \":o\" : \":)\")\r\n    }, [mouseDown, game])\r\n\r\n    useEffect(() => {\r\n        if(game.gameIsOver || game.winner){\r\n            pause()\r\n            game.setTime(`${ minutes < 10 ? \"0\" : \"\" }${ minutes }:${ seconds < 10 ? \"0\" : \"\" }${ seconds }` )\r\n        }\r\n    }, [game])\r\n\r\n    const options = [\"one\", \"two\", \"three\"]\r\n    const [selected, setSelected] = useState(options[0])\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__text\">0{game.mineCount-game.flagCount}</div>\r\n            <button onClick={() => {props.onClick(); reset()}} className=\"header__button\"><Emoji className=\"emoji\" text={emoji}/></button>\r\n            <div className=\"header__text\">{minutes < 10 && \"0\"}{minutes}:{seconds < 10 && \"0\"}{seconds}</div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext, useState } from 'react';\r\nimport { gameContext } from '../contexts/gameContext';\r\n\r\n\r\n\r\nconst Footer = props => {\r\n\r\n    const game = useContext(gameContext)\r\n\r\n    const [size, setSize] = props.dimension\r\n\r\n    const handleChange = e => {\r\n        const n = Number(e.target.value)\r\n        setSize(Math.max(n, 5))\r\n        game.setMineCount(count => Math.min(count, (n*n)-1))\r\n    }\r\n\r\n    const handleMineChange = e => {\r\n        const n = Number(e.target.value)\r\n        game.setMineCount(Math.max(5, Math.min(n, (size*size)-1)))\r\n    }\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            {/* <span className=\"footer__section\">\r\n                <label htmlFor=\"mines\">Number of Mines</label>\r\n                <input type=\"number\" min=\"5\" max={`${(size*size)-1}`} id=\"mines\" value={game.mineCount} onChange={handleMineChange}/>\r\n            </span>\r\n            <span className=\"footer__section\">\r\n                <label htmlFor=\"mines\">size of tile grid</label>\r\n                <input type=\"number\" min=\"5\" max={`${(size * size) - 1}`} id=\"mines\" value={size} onChange={handleChange} />\r\n            </span> */}\r\n            <select onMouseUp={e => props.onDifficultyChange(e.target.value)} onChange={e => props.onDifficultyChange(e.target.value)} value={props.difficulty} name=\"difficulty\" id=\"difficulty\">\r\n                <option value=\"easy\">Easy</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"hard\">Hard</option>\r\n                <option value=\"extreme\">Extreme</option>\r\n            </select>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import firebase from \"firebase\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC9b2ljxk-omeIWR3bDOFvkRsLuYnxzoNk\",\r\n    authDomain: \"minesweeper-7c394.firebaseapp.com\",\r\n    databaseURL: \"https://minesweeper-7c394.firebaseio.com\",\r\n    projectId: \"minesweeper-7c394\",\r\n    storageBucket: \"minesweeper-7c394.appspot.com\",\r\n    messagingSenderId: \"168745128025\",\r\n    appId: \"1:168745128025:web:91b428db1db811585be148\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`Modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : e => e.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n \nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, {useState, useEffect, useContext} from 'react';\nimport './App.css';\nimport GameBoard from './components/GameBoard';\nimport Tile from './components/Tile';\nimport { gameContext } from './contexts/gameContext';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport firebase, { getScoreBoard } from \"./firebase\"\nimport Modal from \"./components/Modal\"\n\nconst map = (n, start1, stop1, start2, stop2) => {\n  return ((n - start1) / (stop1 - start1)) * (stop2 - start2) + start2;\n};\n\nconst difficultyMap = {\n  easy: {mines: 15, size: 10},\n  medium: {mines: 30, size: 15},\n  hard: {mines: 50, size: 17},\n  extreme: {mines: 90, size: 20}\n}\n\nconst segment = (arr, key, categories) => {\n  const result = []\n  for(const cat of categories){\n    result.push(arr.filter(item => item[key] === cat))\n  }\n  return result\n}\n\nfunction App() {\n\n  const [dimension, setDimension] = useState(20);\n  const [board, setBoard] = useState(Array(dimension * dimension).fill())\n  const [difficulty, setDifficulty] = useState(\"easy\")\n  const [mouseDown, setMouseDown] = useState(false)\n  const [scores, setScores] = useState([])\n  const [show, setShow] = useState(false)\n  const [userName, setUserName] = useState()\n\n  const game = useContext(gameContext)\n\n  const getData = async () => {\n    const db = firebase.firestore()\n    const data = await db.collection(\"scores\").get()\n    const scores = data.docs.map(doc => ({...doc.data(), id: doc.id}))\n    db.collection(\"scores\").onSnapshot(snapshot => {\n      const scores = snapshot.docs.map(doc => ({...doc.data(), id: doc.id}))\n      setScores(segment(scores, \"difficulty\", [\"easy\", \"medium\", \"hard\", \"extreme\" ]))\n      console.log(scores)\n    })\n    setScores(segment(scores, \"difficulty\", [\"easy\", \"medium\", \"hard\", \"extreme\"]))\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n\n  const reset = () => {\n\n    let boardArray = Array(dimension * dimension).fill().map(() => {\n      return {\n        hasBomb: false,\n        isClicked: false,\n        neighbors: 0,\n        isFlag: false\n      }\n    })\n    const n = Math.floor(Math.random()*((dimension*dimension)-(game.mineCount+1)))\n    const indexes = [...Array(dimension * dimension).keys()].sort(() => Math.random()-.5).slice(n, n+game.mineCount)\n    indexes.forEach(index => boardArray[index].hasBomb = true)\n    setBoard(boardArray)\n    game.setFlagCount(0)\n    game.setGameIsOver(false)\n    game.setWinner(false)\n    game.setTime(\"\")\n  }\n\n  useEffect(() => {\n    game.setMineCount(difficultyMap[difficulty].mines)\n    setDimension(difficultyMap[difficulty].size)\n    reset()\n  }, [dimension, difficulty, game.mineCount])\n\n  useEffect(() => {\n    if(game.winner){\n      setShow(true)\n    }\n  }, [game])\n\n  const addScore = async e => {\n    e.preventDefault()\n    const item = {\n      username: userName,\n      time: game.time,\n      difficulty: difficulty\n    }\n    console.log(item)\n    const db = firebase.firestore()\n    await db.collection(\"scores\").add(item)\n    setShow(false)\n  }\n\n\n  return (\n      <div className=\"App\" onContextMenu={e => e.preventDefault()} onMouseUp={() => setMouseDown(false)} onMouseDown={() => setMouseDown(true)}>\n        <Modal show={show} onCancel={() => setShow(false)}  header={<h3>Congratulations</h3>} footer={\n          <>\n            <button className=\"submit__button\" onClick={addScore}>Add Score</button>\n            <button className=\"submit__button\" onClick={() => setShow(false)} type=\"submit\">Cancel</button>\n          </>\n        }>\n          <article>You cleared all the mines in {game.time}, if you want to add your score to the scoreboard please enter a display Name</article>\n          <br/>\n          <label htmlFor=\"username\">Display Name </label>\n          <input type=\"text\" id=\"username\" value={userName} onChange={e => setUserName(e.target.value)}/>\n        </Modal>\n        <Header mouseDown={mouseDown} onClick={reset}/>\n        <GameBoard board={board} dimension={dimension}/>\n        <Footer onDifficultyChange={setDifficulty} difficulty={difficulty} dimension={[dimension, setDimension]}/>\n        <div className=\"scores\">\n          {scores.map((cat, i) => (\n            <div>\n              <div className=\"scores__header\">{Object.keys(difficultyMap)[i]}</div>\n              \n              {cat.map(item => (\n                <div>\n                  {item.username} : {\" \"}\n                  {item.time}\n                  </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GameContextProvider } from './contexts/gameContext';\n\nReactDOM.render(<GameContextProvider><App /></GameContextProvider>, document.getElementById('root'));"],"sourceRoot":""}